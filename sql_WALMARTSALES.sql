use Project;

-- CREATING A TABLE AND THEN WILL IMPORT THE DATASET INTO THE SAME-------------------------------------------------------------------------------------------------------
CREATE TABLE Walmart_Sales (
    Invoice_id VARCHAR(25) PRIMARY KEY NOT NULL,
    Branch VARCHAR(10) NOT NULL,
    City VARCHAR(30) NOT NULL,
    Customer_Type VARCHAR(30),
    Gender VARCHAR(10),
    Product_Line VARCHAR(55) NOT NULL,
    Unit_price DECIMAL(10 , 4 ) NOT NULL,
    Quantity INT NOT NULL,
    TAX DECIMAL(10 , 4 ) NOT NULL,
    Total DECIMAL(15 , 4 ),
    Date DATE NOT NULL,
    Time TIME NOT NULL,
    Payment_Mode VARCHAR(20) NOT NULL,
    COGS DECIMAL(15 , 4 ) NOT NULL,
    Gross_MarginPerctge DECIMAL(15 , 10 ) NOT NULL,
    Gross_Income DECIMAL(15 , 4 ) NOT NULL,
    Rating REAL
);



SELECT 
    *
FROM
    Walmart_sales;

-- INPUT TIME OF DAY-----------------------------------------------------------------------------------------------------------------------------------------------------
SELECT time,
       (CASE
            WHEN time BETWEEN '06:00:00' AND '18:00:00' THEN 'Day'
            WHEN time BETWEEN '18:01:00' AND '21:00:00' THEN 'Evening'
            ELSE 'Night'
        END) AS Time_of_Day
FROM walmart_sales;

ALTER TABLE WALMART_SALES DROP COLUMN TIME_OF_DAY;
alter table Walmart_Sales add column Time_of_Day varchar(10);


UPDATE Walmart_Sales 
SET 
    Time_of_Day = (CASE
        WHEN Time BETWEEN '06:00:00' AND '18:00:00' THEN 'Day'
        WHEN Time BETWEEN '18:01:00' AND '21:00:00' THEN 'Evening'
        ELSE 'Night'
    END);

SELECT 
    *
FROM
    walmart_sales;


-- INPUT DAY NAME-------------------------------------------------------------------------------------------------------------------------------------------------------
select date, dayname(date) from walmart_sales;

alter table walmart_sales add column Day_of_Week varchar(10);

UPDATE walmart_sales 
SET 
    Day_of_Week = DAYNAME(date);


-- INPUT MONTH NAME------------------------------------------------------------------------------------------------------------------------------------------------------
SELECT 
    date, MONTHNAME(date)
FROM
    walmart_sales;

alter table walmart_sales add column Month varchar(10);

UPDATE walmart_sales 
SET 
    Month = MONTHNAME(date);



-- EXPLORATORY DATA ANALYSIS---------------------------------------------------------------------------------------------------------------------------------------------
-- HOW MANY UNIQUES CITIESMDOES THE DATA HAVE?
SELECT DISTINCT
    city
FROM
    walmart_sales;

-- DISTINCT BRANCHES?
SELECT DISTINCT
    BRANCH
FROM
    WALMART_SALES;

-- DISTINCT CITY WISE BRANCHES?
SELECT DISTINCT
    CITY, BRANCH
FROM
    WALMART_SALES;
 
-- UNIQUE PRODUCT LINES?
SELECT DISTINCT
    PRODUCT_LINE
FROM
    WALMART_SALES;

SELECT 
    COUNT(DISTINCT PRODUCT_LINE)
FROM
    WALMART_SALES;

-- PAYMENT METHODS?
SELECT DISTINCT
    PAYMENT_METHOD
FROM
    WALMART_SALES;

SELECT 
    PAYMENT_METHOD, COUNT(PAYMENT_METHOD) AS COUNT_OF_PAYMETHOD
FROM
    WALMART_SALES
GROUP BY PAYMENT_METHOD
ORDER BY COUNT_OF_PAYMETHOD DESC;

-- MOST SELLING PRODUCT LINE?
SELECT 
    PRODUCT_LINE, COUNT(PRODUCT_LINE) AS MOST_FAMOUS_PL
FROM
    WALMART_SALES
GROUP BY PRODUCT_LINE
ORDER BY MOST_FAMOUS_PL DESC;

-- TOTAL REVENUE BY MONTH?
SELECT 
    MONTH, SUM(TOTAL) AS TOTAL_SALES
FROM
    WALMART_SALES
GROUP BY MONTH
ORDER BY TOTAL_SALES DESC;

-- LARGEST COGS IN WHICH MONTH?
SELECT 
    MONTH, SUM(COGS) AS MONTHLY_COGS
FROM
    WALMART_SALES
GROUP BY MONTH
ORDER BY MONTHLY_COGS DESC;

-- PRODUCT LINE WITH LARGEST REVENUE?
SELECT 
    PRODUCT_LINE, SUM(TOTAL) AS TOTAL_REVENUE
FROM
    WALMART_SALES
GROUP BY PRODUCT_LINE
ORDER BY TOTAL_REVENUE DESC;

-- CITY WITH THE LARGEST REVENUE?
SELECT 
    CITY, SUM(TOTAL) AS TOTAL_REVENUE
FROM
    WALMART_SALES
GROUP BY CITY
ORDER BY TOTAL_REVENUE DESC;

SELECT 
    BRANCH, CITY, SUM(TOTAL) AS TOTAL_REVENUE
FROM
    WALMART_SALES
GROUP BY BRANCH , CITY
ORDER BY TOTAL_REVENUE DESC;

-- PRODUCT LINE WITH LARGEST VAT?
SELECT 
    PRODUCT_LINE, AVG(TAX) AS AVG_TAX
FROM
    WALMART_SALES
GROUP BY PRODUCT_LINE
ORDER BY AVG_TAX DESC;

-- BRANCH SOLD MORE PRODUCTS THAN AVG PRODUCT SOLD?
SELECT 
    BRANCH, SUM(QUANTITY) AS TOTAL_QNT
FROM
    WALMART_SALES
GROUP BY BRANCH
HAVING SUM(QUANTITY) > (SELECT 
        AVG(QUANTITY)
    FROM
        WALMART_SALES);


-- PRODUCT LINE BY GENDER?
SELECT 
    GENDER, PRODUCT_LINE, COUNT(GENDER) AS GENDER_COUNT
FROM
    WALMART_SALES
GROUP BY GENDER , PRODUCT_LINE
ORDER BY GENDER_COUNT DESC;


-- AVG RATING OF EACH PRODUCT LINE?
SELECT 
    PRODUCT_LINE, ROUND(AVG(RATING), 2) AS AVG_RATING
FROM
    WALMART_SALES
GROUP BY PRODUCT_LINE
ORDER BY AVG_RATING DESC;

-- NUMBER OF SALES MADE IN EACH TIME OF THE DAY OF THE WEEK?
SELECT 
    TIME_OF_DAY, COUNT(TOTAL) AS TOTAL_SALES
FROM
    WALMART_SALES
WHERE
    DAY_OF_WEEK = 'SUNDAY'
GROUP BY TIME_OF_DAY
ORDER BY TOTAL_SALES DESC;


-- CUSTOMER TYPE BRINGS THE MOST REVENUE?
SELECT 
    CUSTOMER_TYPE, SUM(TOTAL) AS TOTAL_REVENUE
FROM
    WALMART_SALES
GROUP BY CUSTOMER_TYPE
ORDER BY TOTAL_REVENUE DESC;


-- CITY WITH THE LARGEST TAX PERCENTAGE?
SELECT 
    CITY, AVG(TAX) AS AVG_TAX
FROM
    WALMART_SALES
GROUP BY CITY
ORDER BY AVG_TAX DESC
LIMIT 1 OFFSET 0;


-- CUSTOMER TYPE THAT PAYS THE MOST IN VAT?
SELECT 
    Customer_Type, SUM(TAX) AS AVG_TAX
FROM
    WALMART_SALES
GROUP BY Customer_Type
ORDER BY AVG_TAX DESC
LIMIT 1 OFFSET 0;


-- UNIQUE CUSTOMER TYPES?
SELECT DISTINCT
    CUSTOMER_TYPE
FROM
    WALMART_SALES;


-- UNIQUE PAYMENT METHODS?
SELECT DISTINCT
    Payment_Method
FROM
    WALMART_SALES;


-- MOST COMMON CUSTOMER TYPE?
SELECT 
    CUSTOMER_TYPE, COUNT(CUSTOMER_TYPE) AS TOTAL_TYPE
FROM
    WALMART_SALES
GROUP BY CUSTOMER_TYPE
ORDER BY TOTAL_TYPE DESC
LIMIT 1;


-- WHICH CUSTOMER BUYS THE MOST?
SELECT 
    CUSTOMER_TYPE, SUM(TOTAL) AS TOTAL
FROM
    WALMART_SALES
GROUP BY CUSTOMER_TYPE
ORDER BY TOTAL DESC
LIMIT 1;


-- THE GENDER OF MOST OF THE CUSTOMERS?
SELECT 
    GENDER, COUNT(GENDER) AS GENDER_COUNT
FROM
    WALMART_SALES
GROUP BY GENDER
ORDER BY GENDER_COUNT DESC;


-- GENDER DISTRIBUTION BY BRANCH?
SELECT 
    GENDER, BRANCH, COUNT(GENDER) AS GENDER_COUNT
FROM
    WALMART_SALES
GROUP BY GENDER , BRANCH
ORDER BY BRANCH;


-- TIME OF THE DAY CUSTOMERS GIVE MOST RATINGS?
SELECT 
    Time_of_Day,
    COUNT(RATING) AS COUNT_RATING,
    ROUND(AVG(RATING), 4) AS AVG_RATING
FROM
    WALMART_SALES
GROUP BY TIME_OF_DAY
ORDER BY COUNT_RATING DESC;


-- WHICH TIME OF DAY CUSTOMERS GIVE MOST RATINGS PER BRANCH?
SELECT 
    BRANCH,
    Time_of_Day,
    COUNT(RATING) AS COUNT_RATING,
    ROUND(AVG(RATING), 4) AS AVG_RATING
FROM
    WALMART_SALES
GROUP BY BRANCH , TIME_OF_DAY
ORDER BY BRANCH;


-- DAY OF THE WEEK THAT HAS THE BEST AVG RATINGS?
SELECT 
    Day_of_Week, ROUND(AVG(RATING), 4) AS AVG_RATING
FROM
    WALMART_SALES
GROUP BY DAY_OF_WEEK
ORDER BY AVG_RATING DESC;


SELECT 
    Day_of_Week, ROUND(AVG(RATING), 4) AS AVG_RATING
FROM
    WALMART_SALES
GROUP BY DAY_OF_WEEK
ORDER BY AVG_RATING DESC
LIMIT 1;


-- DAY OF THE WEEK HAS THE BEST AVG RATING PER BRANCH?
SELECT 
    BRANCH, Day_of_Week, ROUND(AVG(RATING), 4) AS AVG_RATING
FROM
    WALMART_SALES
GROUP BY BRANCH , DAY_OF_WEEK
ORDER BY BRANCH , AVG_RATING DESC;


-- SALES MADE DURING THE WEEKDAY AND TIME OF DAY?
SELECT 
    DAY_OF_WEEK, TIME_OF_DAY, COUNT(TOTAL) AS TOTAL_REVENUE
FROM
    WALMART_SALES
GROUP BY DAY_OF_WEEK , TIME_OF_DAY
ORDER BY TOTAL_REVENUE DESC;


